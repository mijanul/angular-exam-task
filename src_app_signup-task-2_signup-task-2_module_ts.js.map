{"version":3,"file":"src_app_signup-task-2_signup-task-2_module_ts.js","mappings":"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","sources":["./src/app/signup-task-2/signup-task-2-routing.module.ts","./src/app/signup-task-2/signup-task-2.module.ts","./src/app/signup-task-2/signup/signup.component.ts","./src/app/signup-task-2/signup/signup.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupTask2RoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SignupTask2RoutingModule } from './signup-task-2-routing.module';\nimport { SignupComponent } from './signup/signup.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [SignupComponent],\n  imports: [CommonModule, SignupTask2RoutingModule, ReactiveFormsModule],\n})\nexport class SignupTask2Module {}\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss'],\n})\nexport class SignupComponent {\n  public genderOptions: string[] = ['Male', 'Female'];\n\n  signupForm!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {\n    this.signupForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.pattern(\n            /^(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{6,}/\n          ),\n        ],\n      ],\n      gender: ['Male', Validators.required],\n      age: ['', [Validators.required, Validators.min(18), Validators.max(150)]],\n      acceptTerms: [false, Validators.requiredTrue],\n    });\n  }\n}\n","<div class=\"form-container\">\n  <h2>Sign Up</h2>\n  <form [formGroup]=\"signupForm\">\n    <div class=\"form-group\">\n      <label for=\"firstName\">First Name</label>\n      <input id=\"firstName\" type=\"text\" formControlName=\"firstName\" />\n      <div\n        class=\"error-message\"\n        *ngIf=\"\n          signupForm.get('firstName')?.hasError('required') &&\n          signupForm.get('firstName')?.touched\n        \"\n      >\n        First Name is required.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"lastName\">Last Name</label>\n      <input id=\"lastName\" type=\"text\" formControlName=\"lastName\" />\n      <div\n        class=\"error-message\"\n        *ngIf=\"\n          signupForm.get('lastName')?.hasError('required') &&\n          signupForm.get('lastName')?.touched\n        \"\n      >\n        Last Name is required.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input id=\"email\" type=\"email\" formControlName=\"email\" />\n      <div\n        class=\"error-message\"\n        *ngIf=\"\n          signupForm.get('email')?.hasError('required') &&\n          signupForm.get('email')?.touched\n        \"\n      >\n        Email is required.\n      </div>\n      <div\n        class=\"error-message\"\n        *ngIf=\"\n          signupForm.get('email')?.hasError('email') &&\n          signupForm.get('email')?.touched\n        \"\n      >\n        Invalid email format.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"pass\">Password</label>\n      <input id=\"pass\" type=\"password\" formControlName=\"password\" />\n      <div\n        class=\"error-message\"\n        *ngIf=\"\n          signupForm.get('password')?.hasError('required') &&\n          signupForm.get('password')?.touched\n        \"\n      >\n        Password is required.\n      </div>\n      <div\n        class=\"error-message\"\n        *ngIf=\"\n          signupForm.get('password')?.hasError('pattern') &&\n          signupForm.get('password')?.touched\n        \"\n      >\n        Password must be at least 6 characters long and contain one uppercase\n        letter, one digit, and one special character.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"gender\">Gender</label>\n      <select id=\"gender\" formControlName=\"gender\">\n        <option *ngFor=\"let option of genderOptions\" value=\"option\">\n          {{ option }}\n        </option>\n      </select>\n      <div\n        class=\"error-message\"\n        *ngIf=\"\n          signupForm.get('gender')?.hasError('required') &&\n          signupForm.get('gender')?.touched\n        \"\n      >\n        Gender is required.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"age\">Age</label>\n      <input id=\"age\" type=\"number\" formControlName=\"age\" />\n      <div\n        class=\"error-message\"\n        *ngIf=\"\n          signupForm.get('age')?.hasError('required') &&\n          signupForm.get('age')?.touched\n        \"\n      >\n        Age is required.\n      </div>\n      <div\n        class=\"error-message\"\n        *ngIf=\"\n          (signupForm.get('age')?.hasError('min') ||\n            signupForm.get('age')?.hasError('max')) &&\n          signupForm.get('age')?.touched\n        \"\n      >\n        Age must be greater than or equal to 18 years and maximum 150 years.\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"checkbox\" class=\"custom-checkbox\">\n        <input\n          id=\"checkbox\"\n          type=\"checkbox\"\n          name=\"acceptTerms\"\n          formControlName=\"acceptTerms\"\n        />\n        <span class=\"checkmark\"></span>\n        I accept the terms and conditions\n      </label>\n      <div\n        class=\"error-message\"\n        *ngIf=\"\n          signupForm.get('acceptTerms')?.hasError('required') &&\n          signupForm.get('acceptTerms')?.touched\n        \"\n      >\n        You must accept the terms and conditions to sign up.\n      </div>\n    </div>\n    <div class=\"button-group\">\n      <button\n        type=\"submit\"\n        [disabled]=\"!signupForm.valid\"\n        [ngClass]=\"{ 'disabled-button': !signupForm.valid }\"\n      >\n        Signup\n      </button>\n    </div>\n  </form>\n</div>\n"],"names":["RouterModule","SignupComponent","routes","path","component","SignupTask2RoutingModule","_","_2","_3","forChild","imports","i1","exports","CommonModule","ReactiveFormsModule","SignupTask2Module","declarations","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","option_r11","constructor","formBuilder","genderOptions","signupForm","group","firstName","required","lastName","email","password","pattern","gender","age","min","max","acceptTerms","requiredTrue","ɵɵdirectiveInject","FormBuilder","selectors","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","SignupComponent_div_8_Template","SignupComponent_div_13_Template","SignupComponent_div_18_Template","SignupComponent_div_19_Template","SignupComponent_div_24_Template","SignupComponent_div_25_Template","SignupComponent_option_30_Template","SignupComponent_div_31_Template","SignupComponent_div_36_Template","SignupComponent_div_37_Template","SignupComponent_div_43_Template","ɵɵproperty","tmp_1_0","get","hasError","touched","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_8_0","tmp_9_0","tmp_10_0","tmp_11_0","valid","ɵɵpureFunction1","_c0"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}